# Copy this file, place it in the sas-container-recipes project directory,
# and add any overrides that are desired.
# See https://github.com/sassoftware/sas-container-recipes/wiki/Pre-build-Tasks#kubernetes-manifest-inputs

# The directory where manifests will be created. Default is "manifests"
#SAS_MANIFEST_DIR: manifests

# The Kubernetes namespace that we are deploying into. Default is "sas-viya"
#SAS_K8S_NAMESPACE: sas-viya

# Reflects the domain to use when filling in the ingress paths. Default is "company.com"
#SAS_K8S_INGRESS_DOMAIN: company.com

# Defines if inter-communication between services is TLS enabled. Default is "false"
# DO NOT USE: This is an experimental option that is not ready for production.
#SECURE_CONSUL: false

# In the following structure, define the deployment_overrides per service that
# you want to end up in the generated manifests. This will add to or replace defaults
# For each service.deployment_overrides section, you can define the following:
#
# - environments
# - secrets
# - volumes
# - volume mounts
#
# Note: when uncommenting this section, use caution not to change the relative indentation
# of the blocks. The indentation of 'environment', 'volumes', and 'volume_mounts' should all
# match (6 spaces). Also, the embedded comment block may be removed.

#custom_services:
#  sas-casserver-primary:
#    deployment_overrides:
#      environment:
#        - "CASCFG_MODE=mpp"

# Defines if dynamic persistent storage is enabled.
# If no storage class is given, uses the default storage class.
# DYNAMIC_PERSISTENT_STORAGE: true
# Defines storage class to be used with dynamic persistence storage. Leave commented out
# to use default storage class.
# STORAGE_CLASS: <storage class object name>

#
#      # In the following structures, define the custom volumes and volume mounts that
#      # are desired per service. If the same set of volumes and volume mounts are used
#      # across multiple services they will need to be defined per service. This will
#      # add to or replace defaults. The structure is that everything after the pipe '|'
#      # is added to the manifest. It is a straight copy of what is provided to the
#      # generated manifest. For more information about Kubernetes Volumes, see
#      # https://kubernetes.io/docs/concepts/storage/volumes/
#
#      volumes: |
#        - name: volume_identifier
#          nfs:
#            server: nfs_server_hostname
#            path: "/path_on_nfs_server/"
#        - name: EBS-volume
#          # This AWS EBS volume must already exist.
#          awsElasticBlockStore:
#            volumeID: <volume-id>
#            fsType: ext4
#      volume_mounts: |
#        - name: volume_identifier
#          mountPath: /path_inside_container
#        - name: EBS-volume
#          mountPath: /path_inside_container
